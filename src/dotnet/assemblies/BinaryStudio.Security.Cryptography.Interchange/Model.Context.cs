//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BinaryStudio.Security.Cryptography.Interchange
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<DAlternativeName> AlternativeNames { get; set; }
        public DbSet<DAuthorityKeyIdentifier> AuthorityKeyIdentifiers { get; set; }
        public DbSet<DCertificate> Certificates { get; set; }
        public DbSet<DCertificateRevocationList> CertificateRevocationLists { get; set; }
        public DbSet<DExtension> Extensions { get; set; }
        public DbSet<DGeneralName> GeneralNames { get; set; }
        public DbSet<DIssuerAlternativeName> IssuerAlternativeNames { get; set; }
        public DbSet<DObject> Objects { get; set; }
        public DbSet<DObjectIdentifier> ObjectIdentifiers { get; set; }
        public DbSet<DRelativeDistinguishedName> RelativeDistinguishedNames { get; set; }
        public DbSet<DRelativeDistinguishedNameSequence> RelativeDistinguishedNameSequences { get; set; }
        public DbSet<DRelativeDistinguishedNameSequenceMapping> RelativeDistinguishedNameSequenceMappings { get; set; }
        public DbSet<DString> Strings { get; set; }
        public DbSet<DSubjectAlternativeName> SubjectAlternativeNames { get; set; }
        public DbSet<DSubjectKeyIdentifier> SubjectKeyIdentifiers { get; set; }
    }
}
