//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BinaryStudio.Security.Cryptography.Certificates.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BinaryStudio.Security.Cryptography.Certificates.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This certificate has expired..
        /// </summary>
        internal static string _5000 {
            get {
                return ResourceManager.GetString("5000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This certificate is not yet valid..
        /// </summary>
        internal static string _5001 {
            get {
                return ResourceManager.GetString("5001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container.
        /// </summary>
        internal static string _9000 {
            get {
                return ResourceManager.GetString("9000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A CTL used to create this chain did not have a valid signature..
        /// </summary>
        internal static string CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID {
            get {
                return ResourceManager.GetString("CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A certificate trust list (CTL) used to create this chain was not time valid..
        /// </summary>
        internal static string CERT_TRUST_CTL_IS_NOT_TIME_VALID {
            get {
                return ResourceManager.GetString("CERT_TRUST_CTL_IS_NOT_TIME_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A CTL used to create this chain is not valid for this usage..
        /// </summary>
        internal static string CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE {
            get {
                return ResourceManager.GetString("CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate or one of the certificates in the certificate chain has a name constraints extension, and one of the name choices in the end certificate is explicitly excluded..
        /// </summary>
        internal static string CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT {
            get {
                return ResourceManager.GetString("CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate or one of the certificates in the certificate chain has a name constraints extension and a name constraint is missing for one of the name choices in the end certificate..
        /// </summary>
        internal static string CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT {
            get {
                return ResourceManager.GetString("CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate or one of the certificates in the certificate chain has a name constraints extension, and there is not a permitted name constraint for one of the name choices in the end certificate..
        /// </summary>
        internal static string CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT {
            get {
                return ResourceManager.GetString("CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate does not support a critical extension..
        /// </summary>
        internal static string CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT {
            get {
                return ResourceManager.GetString("CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate or one of the certificates in the certificate chain has a name constraints extension that contains unsupported fields. The minimum and maximum fields are not supported. Thus minimum must always be zero and maximum must always be absent. Only UPN is supported for an Other Name..
        /// </summary>
        internal static string CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT {
            get {
                return ResourceManager.GetString("CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CERT_TRUST_HAS_WEAK_HYGIENE.
        /// </summary>
        internal static string CERT_TRUST_HAS_WEAK_HYGIENE {
            get {
                return ResourceManager.GetString("CERT_TRUST_HAS_WEAK_HYGIENE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate has not been strong signed. Typically this indicates that the MD2 or MD5 hashing algorithms were used to create a hash of the certificate..
        /// </summary>
        internal static string CERT_TRUST_HAS_WEAK_SIGNATURE {
            get {
                return ResourceManager.GetString("CERT_TRUST_HAS_WEAK_SIGNATURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate or one of the certificates in the certificate chain has a basic constraints extension, and either the certificate cannot be used to issue other certificates, or the chain path length has been exceeded..
        /// </summary>
        internal static string CERT_TRUST_INVALID_BASIC_CONSTRAINTS {
            get {
                return ResourceManager.GetString("CERT_TRUST_INVALID_BASIC_CONSTRAINTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the certificates has an extension that is not valid..
        /// </summary>
        internal static string CERT_TRUST_INVALID_EXTENSION {
            get {
                return ResourceManager.GetString("CERT_TRUST_INVALID_EXTENSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate or one of the certificates in the certificate chain has a name constraints extension that is not valid..
        /// </summary>
        internal static string CERT_TRUST_INVALID_NAME_CONSTRAINTS {
            get {
                return ResourceManager.GetString("CERT_TRUST_INVALID_NAME_CONSTRAINTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate or one of the certificates in the certificate chain has a policy constraints extension, and one of the issued certificates has a disallowed policy mapping extension or does not have a required issuance policies extension..
        /// </summary>
        internal static string CERT_TRUST_INVALID_POLICY_CONSTRAINTS {
            get {
                return ResourceManager.GetString("CERT_TRUST_INVALID_POLICY_CONSTRAINTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the certificates in the chain was issued by a certification authority that the original certificate had certified..
        /// </summary>
        internal static string CERT_TRUST_IS_CYCLIC {
            get {
                return ResourceManager.GetString("CERT_TRUST_IS_CYCLIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate is explicitly distrusted..
        /// </summary>
        internal static string CERT_TRUST_IS_EXPLICIT_DISTRUST {
            get {
                return ResourceManager.GetString("CERT_TRUST_IS_EXPLICIT_DISTRUST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate or one of the certificates in the certificate chain does not have a valid signature..
        /// </summary>
        internal static string CERT_TRUST_IS_NOT_SIGNATURE_VALID {
            get {
                return ResourceManager.GetString("CERT_TRUST_IS_NOT_SIGNATURE_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CERT_TRUST_IS_NOT_TIME_NESTED.
        /// </summary>
        internal static string CERT_TRUST_IS_NOT_TIME_NESTED {
            get {
                return ResourceManager.GetString("CERT_TRUST_IS_NOT_TIME_NESTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This certificate or one of the certificates in the certificate chain is not time valid..
        /// </summary>
        internal static string CERT_TRUST_IS_NOT_TIME_VALID {
            get {
                return ResourceManager.GetString("CERT_TRUST_IS_NOT_TIME_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate or certificate chain is not valid for its proposed usage..
        /// </summary>
        internal static string CERT_TRUST_IS_NOT_VALID_FOR_USAGE {
            get {
                return ResourceManager.GetString("CERT_TRUST_IS_NOT_VALID_FOR_USAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The revocation status of the certificate or one of the certificates in the certificate chain is either offline or stale..
        /// </summary>
        internal static string CERT_TRUST_IS_OFFLINE_REVOCATION {
            get {
                return ResourceManager.GetString("CERT_TRUST_IS_OFFLINE_REVOCATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate chain is not complete..
        /// </summary>
        internal static string CERT_TRUST_IS_PARTIAL_CHAIN {
            get {
                return ResourceManager.GetString("CERT_TRUST_IS_PARTIAL_CHAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trust for this certificate or one of the certificates in the certificate chain has been revoked..
        /// </summary>
        internal static string CERT_TRUST_IS_REVOKED {
            get {
                return ResourceManager.GetString("CERT_TRUST_IS_REVOKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate or certificate chain is based on an untrusted root..
        /// </summary>
        internal static string CERT_TRUST_IS_UNTRUSTED_ROOT {
            get {
                return ResourceManager.GetString("CERT_TRUST_IS_UNTRUSTED_ROOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No error found for this certificate or chain..
        /// </summary>
        internal static string CERT_TRUST_NO_ERROR {
            get {
                return ResourceManager.GetString("CERT_TRUST_NO_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The end certificate does not have any resultant issuance policies, and one of the issuing certification authority certificates has a policy constraints extension requiring it..
        /// </summary>
        internal static string CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY {
            get {
                return ResourceManager.GetString("CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The revocation status of the certificate or one of the certificates in the certificate chain is unknown..
        /// </summary>
        internal static string CERT_TRUST_REVOCATION_STATUS_UNKNOWN {
            get {
                return ResourceManager.GetString("CERT_TRUST_REVOCATION_STATUS_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extensions.
        /// </summary>
        internal static string X509Certificate_Extensions {
            get {
                return ResourceManager.GetString("X509Certificate.Extensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature hash algorithm.
        /// </summary>
        internal static string X509Certificate_HashAlgorithm {
            get {
                return ResourceManager.GetString("X509Certificate.HashAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issuer.
        /// </summary>
        internal static string X509Certificate_Issuer {
            get {
                return ResourceManager.GetString("X509Certificate.Issuer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid from.
        /// </summary>
        internal static string X509Certificate_NotAfter {
            get {
                return ResourceManager.GetString("X509Certificate.NotAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid to.
        /// </summary>
        internal static string X509Certificate_NotBefore {
            get {
                return ResourceManager.GetString("X509Certificate.NotBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public key.
        /// </summary>
        internal static string X509Certificate_PublicKey {
            get {
                return ResourceManager.GetString("X509Certificate.PublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serial number.
        /// </summary>
        internal static string X509Certificate_SerialNumber {
            get {
                return ResourceManager.GetString("X509Certificate.SerialNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature.
        /// </summary>
        internal static string X509Certificate_Signature {
            get {
                return ResourceManager.GetString("X509Certificate.Signature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature algorithm.
        /// </summary>
        internal static string X509Certificate_SignatureAlgorithm {
            get {
                return ResourceManager.GetString("X509Certificate.SignatureAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subject.
        /// </summary>
        internal static string X509Certificate_Subject {
            get {
                return ResourceManager.GetString("X509Certificate.Subject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thumbprint.
        /// </summary>
        internal static string X509Certificate_Thumbprint {
            get {
                return ResourceManager.GetString("X509Certificate.Thumbprint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thumbprint Algorithm.
        /// </summary>
        internal static string X509Certificate_ThumbprintAlgorithm {
            get {
                return ResourceManager.GetString("X509Certificate.ThumbprintAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        internal static string X509Certificate_Version {
            get {
                return ResourceManager.GetString("X509Certificate.Version", resourceCulture);
            }
        }
    }
}
