<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:e="clr-namespace:BinaryStudio.PlatformUI.Media.Effects"
                    xmlns:c="clr-namespace:BinaryStudio.PlatformUI.Shell.Controls"
                    xmlns:u="clr-namespace:BinaryStudio.PlatformUI">
  <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="BorderBrush" Value="{x:Null}"/>
    <Setter Property="Background" Value="{DynamicResource MenuBarBrushKey}"/>
    <Setter Property="Foreground" Value="{DynamicResource MenuTextBrushKey}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"
                  Background="{TemplateBinding Background}">
            <ItemsPresenter/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
    <Decorator SnapsToDevicePixels="True">
      <Decorator.Resources>
        <c:SubtractionConverter x:Key="SubtractionConverter" Subtrahend="2"/>
      </Decorator.Resources>
      <Grid>
        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade"
               HorizontalOffset="2">
          <c:SystemDropShadowChrome Margin="0">
            <Grid Grid.IsSharedSizeScope="True" Margin="0,0,2,2">
              <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1,1,1,1" Background="{DynamicResource WindowBrushKey}" BorderBrush="{DynamicResource ControlDarkDarkBrushKey}">
                <ScrollViewer CanContentScroll="True"
                              VerticalScrollBarVisibility="Auto"
                              Margin="2">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </ScrollViewer>
              </Border>
            </Grid>
          </c:SystemDropShadowChrome>
        </Popup>
        <Popup Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" StaysOpen="True"
               HorizontalOffset="-1"
               Width="{Binding ElementName=InnerBorder,Path=ActualWidth,Converter={StaticResource SubtractionConverter}}">
          <Border BorderBrush="{DynamicResource WindowBrushKey}"
                  BorderThickness="0,1,0,0"/>
        </Popup>
        <Border Name="InnerBorder" BorderThickness="1,1,1,0" BorderBrush="Transparent" Background="Transparent" Margin="0,0,0,0">
          <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" TextBlock.Foreground="{DynamicResource MenuTextBrushKey}" Margin="6,3,6,3"/>
        </Border>
      </Grid>
    </Decorator>
    <ControlTemplate.Triggers>
      <Trigger Property="IsSuspendingPopupAnimation" Value="true">
        <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="true">
        <Setter Property="Background" Value="{DynamicResource MenuHighlightBrushKey}" TargetName="InnerBorder"/>
      </Trigger>
      <Trigger Property="IsSubmenuOpen" Value="true">
        <Setter Property="Background"  Value="{DynamicResource WindowBrushKey}"          TargetName="InnerBorder"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkDarkBrushKey}" TargetName="InnerBorder"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border x:Name="Border" TextBlock.Foreground="{DynamicResource ControlTextBrushKey}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
          <ColumnDefinition Width="13"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="Transparent" Grid.Column="0" Grid.ColumnSpan="4"/>
        <Decorator Grid.Column="0" Margin="6,0,6,0" VerticalAlignment="Center">
          <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Decorator>
        <Border Grid.Column="0" Margin="6,0,6,0" Visibility="Collapsed" x:Name="Mark">
          <Border Background="{DynamicResource MenuCheckMarkBackgroundBrushKey}" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="CheckMark" Visibility="Hidden">
            <Path Stroke="{DynamicResource WindowTextBrushKey}"
                  Margin="4"
                  Opacity="0.5"
                  Width="8"
                  Height="8"
                  SnapsToDevicePixels="False"
                  StrokeThickness="1"
                  Data="M 0 4 L 3 7 L 7 0"/>
          </Border>
        </Border>
        <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" Margin="5,0,5,0"/>
        <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" VerticalAlignment="Center"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuHighlightBrushKey}"/>
        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuHighlightBrushKey}"/>
      </Trigger>
      <Trigger Property="IsCheckable" Value="True">
        <Setter TargetName="Mark" Property="Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource GrayTextBrushKey}" TargetName="Border"/>
        <Setter TargetName="Icon" Property="Opacity" Value="0.5"/>
        <Setter TargetName="Icon" Property="Effect">
          <Setter.Value>
            <e:GrayscaleEffect/>
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border x:Name="Border">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
          <ColumnDefinition Width="13"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="Transparent" Grid.Column="0" Grid.ColumnSpan="4"/>
        <Decorator Grid.Column="0" Margin="6,0,6,0" VerticalAlignment="Center">
          <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Decorator>
        <Border Grid.Column="0" Margin="6,0,6,0" Visibility="Collapsed" x:Name="Mark">
          <Border Background="{DynamicResource MenuCheckMarkBackgroundBrushKey}" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="CheckMark" Visibility="Hidden">
            <Path Stroke="{DynamicResource WindowTextBrushKey}"
                  Margin="4"
                  Opacity="0.5"
                  Width="8"
                  Height="8"
                  SnapsToDevicePixels="False"
                  StrokeThickness="1"
                  Data="M 0 4 L 3 7 L 7 0"/>
          </Border>
        </Border>
        <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" TextBlock.Foreground="{DynamicResource ControlTextBrushKey}"
                          VerticalAlignment="Center" Margin="5,0,5,0"/>
        <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" Foreground="{DynamicResource ControlTextBrushKey}"
                   VerticalAlignment="Center"/>
        <Border Grid.Column="3">
          <Path Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{DynamicResource WindowTextBrushKey}" VerticalAlignment="Center"/>
        </Border>
        <Popup Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}" Focusable="False" PopupAnimation="Fade"
               SnapsToDevicePixels="True"
               AllowsTransparency="True"
               HorizontalOffset="-4">
          <c:SystemDropShadowChrome>
            <Grid Margin="0,0,3,3">
              <Border x:Name="SubmenuBorder"
                  Background="{DynamicResource WindowBrushKey}"
                  BorderBrush="{DynamicResource ControlDarkDarkBrushKey}"
                  BorderThickness="1">
                <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                </ScrollViewer>
              </Border>
            </Grid>
          </c:SystemDropShadowChrome>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuHighlightBrushKey}"/>
        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuHighlightBrushKey}"/>
      </Trigger>
      <Trigger Property="IsCheckable" Value="True">
        <Setter TargetName="Mark" Property="Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource GrayTextBrushKey}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border x:Name="Border">
      <Grid>
        <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsHighlighted" Value="true">
        <Setter Property="Background" TargetName="Border" Value="{DynamicResource MenuHighlightBrushKey}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource GrayTextBrushKey}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <c:SystemDropShadowChrome>
            <Border x:Name="Border" Background="{DynamicResource WindowBrushKey}" BorderThickness="1" BorderBrush="{DynamicResource ControlDarkDarkBrushKey}"
                    Margin="0,0,3,3">
              <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
              </ScrollViewer>
            </Border>
          </c:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" Value="true">
              <Setter TargetName="Border" Property="Padding" Value="0"/>
              <Setter TargetName="Border" Property="CornerRadius" Value="0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>