<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:u="clr-namespace:BinaryStudio.PlatformUI.Controls"
                    xmlns:n="clr-namespace:BinaryStudio.PlatformUI"
                    xmlns:r="clr-namespace:BinaryStudio.PlatformUI.Properties"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:e="clr-namespace:BinaryStudio.PlatformUI.Controls.Internal">
  <n:DoubleConverter x:Key="DoubleConverter"/>
  <n:ToString x:Key="ToString"/>
  <r:LocalResource x:Key="Resources"/>
  
  <Style x:Key="ExpandOrCollapseToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="ClickMode" Value="Press"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Margin="5,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Rectangle Fill="Transparent"/>
            <Path Name="Collapsed"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  StrokeThickness="1"
                  Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                  Fill="{TemplateBinding Background}"
                  Data="M 0.5 0.5 L 8.5 0.5 L 8.5 8.5 L 0.5 8.5 L 0.5 0.5 M 2.5 4.5 L 6.5 4.5 M 4.5 2.5 L 4.5 6.5">
            </Path>
            <Path Name="Expanded"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="1,1,1,1"
                  StrokeThickness="1"
                  Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                  Data="M 0.5 0.5 L 8.5 0.5 L 8.5 8.5 L 0.5 8.5 L 0.5 0.5 M 2.5 4.5 L 6.5 4.5"
                  Fill="{TemplateBinding Background}"
                  Visibility="Hidden">
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Visibility" Value="Visible"   TargetName="Expanded"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
              <Setter Property="Visibility" Value="Collapsed" TargetName="Expanded"/>
              <Setter Property="Visibility" Value="Visible"   TargetName="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate DataType="{x:Type e:GridEntry}" x:Key="GridEntryStyle.TextBox">
    <TextBox Text="{Binding GridValue,UpdateSourceTrigger=LostFocus}"
             Name="TextBox"
             BorderBrush="{x:Null}"
             BorderThickness="0"
             Background="Transparent"
             Padding="0"
             Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
             CaretBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
             IsReadOnlyCaretVisible="True"
             IsReadOnly="{Binding IsReadOnly}"
             Margin="-2,0,0,1"/>
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
        <Setter TargetName="TextBox" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <DataTemplate DataType="{x:Type e:GridEntry}" x:Key="GridEntryStyle.ComboBox">
    <DataTemplate.Resources>
      <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource ControlDarkDarkBrushKey}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Border BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Background="{TemplateBinding Background}"
                      SnapsToDevicePixels="True">
                <Grid>
                  <Rectangle x:Name="Marker" Fill="Transparent"/>
                  <ContentPresenter/>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                  <Setter Property="Background" Value="{DynamicResource HighlightBrushKey}"/>
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Marker" Property="Fill" Value="#55FFFFFF"/>
                </MultiTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </DataTemplate.Resources>
    <ComboBox IsEditable="True"
              ItemsSource="{Binding StandardValues}"
              SelectedItem="{Binding Value,Mode=TwoWay}">
      <ComboBox.ItemContainerStyle>
        <Style TargetType="{x:Type ComboBoxItem}">
          <Setter Property="Foreground" Value="{DynamicResource ControlTextBrushKey}"/>
          <Setter Property="Background" Value="Transparent"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                <Border SnapsToDevicePixels="True"
                        BorderBrush="{x:Null}"
                        BorderThickness="0"
                        Background="{TemplateBinding Background}">
                  <ContentPresenter Margin="5,0,5,0"/>
                </Border>
                <ControlTemplate.Triggers>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="IsMouseOver" Value="True"/>
                      <Condition Property="IsSelected" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource ControlDarkBrushKey}"/>
                  </MultiTrigger>
                  <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HighlightBrushKey}"/>
                    <Setter Property="Foreground" Value="{DynamicResource HighlightTextBrushKey}"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </ComboBox.ItemContainerStyle>
      <ComboBox.Template>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid x:Name="Placement">
            <Grid.ColumnDefinitions>
              <ColumnDefinition/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup Placement="Bottom"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   x:Name="PART_Popup"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True"
                   Focusable="False"
                   PopupAnimation="Slide">
              <Grid SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                <Border SnapsToDevicePixels="True"
                        BorderThickness="1"
                        Background="{DynamicResource WindowBrushKey}"
                        BorderBrush="{DynamicResource ControlDarkBrushKey}">
                  <ScrollViewer SnapsToDevicePixels="True">
                    <StackPanel IsItemsHost="True"
                                KeyboardNavigation.DirectionalNavigation="Contained"/>
                  </ScrollViewer>
                </Border>
              </Grid>
            </Popup>
            <TextBox HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     IsReadOnly="True"
                     IsReadOnlyCaretVisible="True"
                     Margin="-2,0,0,0"
                     Padding="0"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                     BorderBrush="{x:Null}"
                     Foreground="{DynamicResource ControlTextBrushKey}"
                     BorderThickness="0"
                     Background="Transparent"
                     CaretBrush="{DynamicResource ControlTextBrushKey}"
                     Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem,Converter={StaticResource ToString},Mode=OneWay}"
                     Grid.Column="0">
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged" SourceObject="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                  <e:TextBoxSelectAction StartIndex="-1"/>
                </i:EventTrigger>
              </i:Interaction.Triggers>
            </TextBox>
            <ToggleButton Grid.Column="1"
                          ClickMode="Press"
                          Focusable="False"
                          Width="{DynamicResource {x:Static SystemParameters.ScrollWidthKey}}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
              <Grid>
                <Path HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Margin="1,1,1,1"
                      Data="M 0 0 L 8 0 L 4 4 Z"
                      Fill="{DynamicResource ControlTextBrushKey}"/>
              </Grid>
            </ToggleButton>
          </Grid>
        </ControlTemplate>
      </ComboBox.Template>
    </ComboBox>
  </DataTemplate>
  <DataTemplate DataType="{x:Type e:GridEntry}" x:Key="GridEntryStyle.Modal">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <TextBox Text="{Binding Value,Converter={StaticResource ToString},Mode=OneWay}"
               BorderBrush="{x:Null}"
               IsReadOnly="True"
               BorderThickness="0"
               Background="Transparent"
               Padding="0"
               Foreground="{DynamicResource ControlTextBrushKey}"
               CaretBrush="{DynamicResource ControlTextBrushKey}"
               IsReadOnlyCaretVisible="True"
               Margin="-2,0,0,0"/>
      <Button Grid.Column="1" Width="{DynamicResource {x:Static SystemParameters.ScrollWidthKey}}">
        <Button.Style>
          <Style TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Background" Value="{DynamicResource ControlDarkDarkBrushKey}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                  <Border BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Background="{TemplateBinding Background}"
                      SnapsToDevicePixels="True">
                    <Grid>
                      <Rectangle x:Name="Marker" Fill="Transparent"/>
                      <ContentPresenter/>
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <MultiTrigger>
                      <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                      </MultiTrigger.Conditions>
                      <Setter TargetName="Marker" Property="Fill" Value="#55FFFFFF"/>
                    </MultiTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Button.Style>
        <TextBlock HorizontalAlignment="Center">...</TextBlock>
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="Click">
            <e:PropertyDescriptorShowEditorDialogAction/>
          </i:EventTrigger>
        </i:Interaction.Triggers>
      </Button>
    </Grid>
  </DataTemplate>
  <DataTemplate DataType="{x:Type e:GridEntry}" x:Key="GridEntryStyle.DropDown">
    <e:PropertyGridEntryDropDownControl Content="{Binding}">
      <e:PropertyGridEntryDropDownControl.ContentTemplate>
        <DataTemplate DataType="{x:Type e:GridEntry}">
          <TextBox Text="{Binding Value,Converter={StaticResource ToString},Mode=OneWay}"
                   BorderBrush="{x:Null}"
                   IsReadOnly="True"
                   BorderThickness="0"
                   Padding="0"
                   Background="Transparent"
                   Foreground="{DynamicResource ControlTextBrushKey}"
                   CaretBrush="{DynamicResource ControlTextBrushKey}"
                   IsReadOnlyCaretVisible="True"
                   Margin="-2,0,0,0"/>
        </DataTemplate>
      </e:PropertyGridEntryDropDownControl.ContentTemplate>
    </e:PropertyGridEntryDropDownControl>
  </DataTemplate>
  <Style TargetType="{x:Type u:PropertyGridControl}">
    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    <Setter Property="BorderThickness" Value="0,1,1,1"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="ReadOnlyForeground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    <Setter Property="TextWrapping" Value="NoWrap"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type u:PropertyGridControl}">
          <ControlTemplate.Resources>
          </ControlTemplate.Resources>
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.Resources>
                <Style TargetType="{x:Type Border}">
                  <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                  <Setter Property="Background"  Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                  <Setter Property="BorderThickness" Value="1,0,0,1"/>
                  <Setter Property="SnapsToDevicePixels" Value="True"/>
                </Style>
                <Style TargetType="{x:Type TextBlock}">
                  <Setter Property="Margin" Value="5,0,5,0"/>
                  <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                </Style>
              </Grid.Resources>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type u:PropertyGridControl}},Path=LeftColumnWidth,Mode=TwoWay}"/>
                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type u:PropertyGridControl}},Path=RightColumnWidth,Mode=TwoWay}"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Name="DescriptionPanelRowDefinition" Height="1*"/>
              </Grid.RowDefinitions>
              <Border Grid.Row="0" Grid.Column="0">
                <TextBlock Text="{Binding Converter={StaticResource Resources},ConverterParameter='PropertyGridControl.Field',Mode=OneWay}"/>
              </Border>
              <Border Grid.Row="0" Grid.Column="1">
                <TextBlock  Text="{Binding Converter={StaticResource Resources},ConverterParameter='PropertyGridControl.Value',Mode=OneWay}"/>
              </Border>
              <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" UseLayoutRounding="True" SnapsToDevicePixels="True" Background="Transparent" BorderThickness="1,0,0,0">
                <ScrollViewer Style="{DynamicResource {x:Type ScrollViewer}}" Margin="-1,0,0,0" BorderThickness="0">
                  <Grid>
                    <TreeView Name="ItemsHost" Background="Transparent"
                              u:TextBox.TextWrapping="{Binding RelativeSource={RelativeSource AncestorType={x:Type u:PropertyGridControl}},Path=TextWrapping,Mode=OneWay}"
                              Margin="0,0,-1,0">
                      <TreeView.ItemsPanel>
                        <ItemsPanelTemplate>
                          <VirtualizingStackPanel CanHorizontallyScroll="False" IsVirtualizing="True"/>
                        </ItemsPanelTemplate>
                      </TreeView.ItemsPanel>
                      <TreeView.Template>
                        <ControlTemplate>
                          <Grid>
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type u:PropertyGridControl}},Path=LeftColumnWidth,Mode=TwoWay}"/>
                              <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type u:PropertyGridControl}},Path=RightColumnWidth,Mode=TwoWay}"/>
                            </Grid.ColumnDefinitions>
                            <ItemsPresenter TextBlock.Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.ColumnSpan="2"/>
                            <GridSplitter Width="5" Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" HorizontalAlignment="Right" Background="Transparent" ShowsPreview="False" Focusable="False" ResizeDirection="Columns"/>
                          </Grid>
                        </ControlTemplate>
                      </TreeView.Template>
                      <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type e:GridEntry}" ItemsSource="{Binding}"/>
                      </TreeView.ItemTemplate>
                      <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                          <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                          <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"/>
                          <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
                          <Setter Property="u:TextBox.TextWrapping" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}},Path=(u:TextBox.TextWrapping),Mode=OneWay}"/>
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                  <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type u:PropertyGridControl}},Path=LeftColumnWidth,Mode=OneWay}"/>
                                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type u:PropertyGridControl}},Path=RightColumnWidth,Mode=OneWay}"/>
                                  </Grid.ColumnDefinitions>
                                  <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                  </Grid.RowDefinitions>
                                  <Border Grid.Row="0" Grid.Column="0"
                                      Name="HeaderBorder"
                                      BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                                      BorderThickness="1,0,0,1">
                                    <Grid>
                                      <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                      </Grid.ColumnDefinitions>
                                      <ToggleButton Grid.Column="0"
                                                Name="Expander"
                                                Width="20"
                                                VerticalAlignment="Top"
                                                Margin="{Binding Margin}"
                                                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{StaticResource ExpandOrCollapseToggleButtonStyle}"/>
                                      <Grid Grid.Column="1">
                                        <TextBlock Text="{Binding DisplayName}"
                                               Foreground="{TemplateBinding Foreground}"
                                               TextTrimming="CharacterEllipsis"/>
                                      </Grid>
                                    </Grid>
                                  </Border>
                                  <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                                      BorderThickness="1,0,1,1"
                                      Grid.Column="1"
                                      Grid.Row="0">
                                    <Grid>
                                      <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                      </Grid.ColumnDefinitions>
                                      <e:GridEntryContentPresenter Content="{Binding}"
                                                               EditTemplate="{StaticResource GridEntryStyle.TextBox}"
                                                               Grid.Column="1"
                                                               x:Name="ContentPresenter"
                                                               Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                               Margin="5,0,5,0">
                                        <e:GridEntryContentPresenter.DisplayTemplate>
                                          <DataTemplate DataType="{x:Type e:GridEntry}">
                                              <TextBlock TextWrapping="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}},Path=(u:TextBox.TextWrapping),Mode=OneWay}">
                                                <Run Text="{Binding GridValue,Mode=OneWay}"/>
                                                <InlineUIContainer BaselineAlignment="Center">
                                                  <Grid VerticalAlignment="Center">
                                                    <Grid.RowDefinitions>
                                                      <RowDefinition Height="Auto"/>
                                                      <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Margin="0,0,0,-3" Padding="0" Grid.Row="0" FontSize="7" Text="{Binding Superscript,Mode=OneWay}"/>
                                                    <TextBlock Margin="0,-1,0,0" Padding="0" Grid.Row="1" FontSize="7" Text="{Binding Subscript,Mode=OneWay}"/>
                                                  </Grid>
                                                </InlineUIContainer>
                                              </TextBlock>
                                          </DataTemplate>
                                        </e:GridEntryContentPresenter.DisplayTemplate>
                                      </e:GridEntryContentPresenter>
                                      <Border Margin="5,0,0,0"
                                          Visibility="Collapsed"
                                          Name="PaintValue"
                                          Grid.Column="0"
                                          BorderThickness="1"
                                          BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
                                        <ContentPresenter Content="{Binding PaintValueImage}"
                                                      Width="20" Height="14"/>
                                      </Border>
                                    </Grid>
                                  </Border>
                                  <ItemsPresenter Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1"
                                              Name="ItemsHost"
                                              Visibility="Collapsed"
                                              SnapsToDevicePixels="True"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                  <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                  </Trigger>
                                  <Trigger Property="IsExpanded" Value="True">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                                  </Trigger>
                                  <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=u:PropertyGridControl},Path=ReadOnlyForeground}"/>
                                    <Setter TargetName="ContentPresenter" Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=u:PropertyGridControl},Path=ReadOnlyForeground}"/>
                                  </DataTrigger>
                                  <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                      <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                  </MultiTrigger>
                                  <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                      <Condition Binding="{Binding IsCompositeDescriptor}" Value="True"/>
                                      <Condition Binding="{Binding IsSelected}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource HotTrackBrushKey}"/>
                                  </MultiDataTrigger>
                                  <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                      <Condition Binding="{Binding Style}" Value="ComboBox"/>
                                      <Condition Binding="{Binding IsReadOnly}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ContentPresenter" Property="EditTemplate" Value="{StaticResource GridEntryStyle.ComboBox}"/>
                                  </MultiDataTrigger>
                                  <DataTrigger Binding="{Binding Style}" Value="Modal">
                                    <Setter TargetName="ContentPresenter" Property="EditTemplate" Value="{StaticResource GridEntryStyle.Modal}"/>
                                  </DataTrigger>
                                  <DataTrigger Binding="{Binding Style}" Value="DropDown">
                                    <Setter TargetName="ContentPresenter" Property="EditTemplate" Value="{StaticResource GridEntryStyle.DropDown}"/>
                                  </DataTrigger>
                                  <DataTrigger Binding="{Binding IsPaintValueSupported}" Value="True">
                                    <Setter TargetName="PaintValue" Property="Visibility" Value="Visible"/>
                                  </DataTrigger>
                                </ControlTemplate.Triggers>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </TreeView.ItemContainerStyle>
                    </TreeView>
                  </Grid>
                </ScrollViewer>
              </Border>
              <Border Grid.Row="2" Grid.Column="0" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1,1,0,0" SnapsToDevicePixels="True" UseLayoutRounding="True" Grid.ColumnSpan="2"
                      Background="Transparent" Name="DescriptionPanel">
                <ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedPropertyDescriptor,Mode=OneWay}" ContentTemplate="{TemplateBinding DescriptionPanelTemplate}"
                                  Margin="0,8,0,0"/>
              </Border>
              <GridSplitter Width="5" Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" HorizontalAlignment="Right" Background="Transparent" ShowsPreview="False" Focusable="False" ResizeDirection="Columns"/>
              <GridSplitter Grid.Row="2" ResizeDirection="Rows" Width="Auto" Height="Auto"
                            Grid.Column="0" Grid.ColumnSpan="2"
                            Margin="0,0,-1,0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Stretch"
                            Name="HSplitter">
                <GridSplitter.Template>
                  <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border SnapsToDevicePixels="True"
                            BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                            BorderThickness="1">
                      <Grid>
                        <Rectangle Fill="{DynamicResource ControlBrushKey}"/>
                        <Border BorderThickness="0,1,0,1" Width="50" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Height="3"
                                Margin="0,2,0,2"/>
                      </Grid>
                    </Border>
                  </ControlTemplate>
                </GridSplitter.Template>
              </GridSplitter>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsDescriptionPanelVisible" Value="False">
              <Setter TargetName="HSplitter"        Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="DescriptionPanel" Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="DescriptionPanelRowDefinition" Property="Height" Value="0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="DescriptionPanelTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="{Binding DisplayName,Mode=OneWay}" FontWeight="Bold" Margin="3,0,0,2"/>
            <Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
              <TextBox Text="{Binding Description,Mode=OneWay}" TextWrapping="Wrap" IsReadOnly="True"
                     CaretBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                     Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                     IsReadOnlyCaretVisible="True"
                     VerticalScrollBarVisibility="Auto"
                     Margin="0"
                     BorderThickness="0"
                     Background="Transparent"
                     Padding="2,0,2,0"/>
            </Border>
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type e:GridEntryContentPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:GridEntryContentPresenter}">
          <ContentControl Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding DisplayTemplate}"
                          Focusable="False"
                          Name="ContentPresenter"/>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEditing" Value="True">
              <Setter TargetName="ContentPresenter" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=EditTemplate,Mode=OneWay}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type e:PropertyGridEntryDropDownControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:PropertyGridEntryDropDownControl}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <ContentPresenter Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"/>
              <ToggleButton Grid.Column="1"
                            Width="{DynamicResource {x:Static SystemParameters.ScrollWidthKey}}"
                            IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsDropDownOpen,Mode=TwoWay}">
                <ToggleButton.Style>
                  <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                          <Border BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="True">
                            <Grid>
                              <Rectangle x:Name="Marker" Fill="Transparent"/>
                              <ContentPresenter/>
                            </Grid>
                          </Border>
                          <ControlTemplate.Triggers>
                            <MultiTrigger>
                              <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                              </MultiTrigger.Conditions>
                              <Setter TargetName="Marker" Property="Fill" Value="#55FFFFFF"/>
                            </MultiTrigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </ToggleButton.Style>
                <Grid>
                  <Path HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Margin="1,1,1,1"
                        Data="M 0 0 L 8 0 L 4 4 Z"
                        Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </Grid>
              </ToggleButton>
              <Popup Grid.Column="0" Grid.ColumnSpan="2"
                     IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsDropDownOpen,Mode=TwoWay}"
                     Placement="Bottom"
                     AllowsTransparency="False"
                     Focusable="False"
                     PopupAnimation="Slide">
                <Grid MinWidth="{TemplateBinding ActualWidth}">
                  <Border BorderThickness="0" BorderBrush="{x:Null}" x:Name="Host"/>
                </Grid>
              </Popup>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>