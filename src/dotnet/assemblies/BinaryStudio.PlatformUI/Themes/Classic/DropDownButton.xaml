<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:u="clr-namespace:BinaryStudio.PlatformUI.Controls"
                    xmlns:e="clr-namespace:BinaryStudio.PlatformUI.Media.Effects"
                    xmlns:c="clr-namespace:BinaryStudio.PlatformUI.Shell.Controls">
  <Style TargetType="{x:Type u:DropDownButton}" x:Key="{x:Type u:DropDownButton}">
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Padding" Value="20,2,20,2"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <!--<Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type MenuItem}">
          <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
        </Style>
      </Setter.Value>
    </Setter>-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type u:DropDownButton}">
          <Grid UseLayoutRounding="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition/>
              <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
              <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderThickness="1,1,0,0" x:Name="OuterBorder"/>
              <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"   BorderThickness="0,0,1,1"/>
              <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1,1,0,0" Margin="1" x:Name="InnerBorder"/>
              <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"  BorderThickness="0,0,1,1" Margin="1"/>
              <Border Margin="2" BorderBrush="{x:Null}" BorderThickness="0" Background="{TemplateBinding Background}">
                <Decorator x:Name="ContentDecorator" SnapsToDevicePixels="True">
                  <ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   TextBlock.Foreground="{TemplateBinding Foreground}"
                                   Content="{TemplateBinding Content}"
                                   x:Name="Content"/>
                </Decorator>
              </Border>
            </Grid>
            <ToggleButton Grid.Column="1" Focusable="False" Margin="-1,0,0,0"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          ClickMode="Press" x:Name="ToggleButton">
              <Path Fill="Red" Data="M0 0 L 2.5 2.5 L 5 0"/>
            </ToggleButton>
            <Popup Grid.Column="0" x:Name="PART_Popup"
                   PopupAnimation="Fade"
                   IsOpen="{Binding IsDropDownOpen, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                   HorizontalOffset="4"
                   SnapsToDevicePixels="True"
                   AllowsTransparency="True"
                   Placement="Bottom">
              <c:SystemDropShadowChrome>
                <Grid Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Margin="0,0,3,3">
                  <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderThickness="1,1,0,0"/>
                  <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"  BorderThickness="0,0,1,1"/>
                  <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1,1,0,0" Margin="1"/>
                  <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"  BorderThickness="0,0,1,1" Margin="1"/>
                  <ScrollViewer Margin="2" CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                    <StackPanel Orientation="Vertical" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                  </ScrollViewer>
                </Grid>
              </c:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
              <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
              <Setter TargetName="ContentDecorator" Property="Margin" Value="1,1,-1,-1"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
              <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
              <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
              <Setter TargetName="ContentDecorator" Property="Margin" Value="1,1,-1,-1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Content" Property="Opacity" Value="0.5"/>
              <Setter TargetName="Content" Property="Effect">
                <Setter.Value>
                  <e:GrayscaleEffect/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>