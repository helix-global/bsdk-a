<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:e="clr-namespace:BinaryStudio.PlatformUI.Controls"
                    xmlns:c="clr-namespace:BinaryStudio.PlatformUI.Converters">
  <c:EnumerableHasItems x:Key="HasItems"/>
  <Style x:Key="ExpandOrCollapseToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="ClickMode" Value="Press"/>
    <Setter Property="Background" Value="{DynamicResource ControlBrushKey}"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Margin="5,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Rectangle Fill="Transparent"/>
            <Path Name="Collapsed"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  StrokeThickness="1"
                  Stroke="{DynamicResource ControlTextBrushKey}"
                  Fill="{TemplateBinding Background}"
                  Data="M 0.5 0.5 L 8.5 0.5 L 8.5 8.5 L 0.5 8.5 L 0.5 0.5 M 2.5 4.5 L 6.5 4.5 M 4.5 2.5 L 4.5 6.5">
            </Path>
            <Path Name="Expanded"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="1,1,1,1"
                  StrokeThickness="1"
                  Stroke="{DynamicResource ControlTextBrushKey}"
                  Data="M 0.5 0.5 L 8.5 0.5 L 8.5 8.5 L 0.5 8.5 L 0.5 0.5 M 2.5 4.5 L 6.5 4.5"
                  Fill="{TemplateBinding Background}"
                  Visibility="Hidden">
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Visibility" Value="Visible"   TargetName="Expanded"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
              <Setter Property="Visibility" Value="Collapsed" TargetName="Expanded"/>
              <Setter Property="Visibility" Value="Visible"   TargetName="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGrid}" TargetType="{x:Type e:TreeDataGrid}">
    <Setter Property="Background" Value="{DynamicResource ControlBrushKey}"/>
    <Setter Property="Foreground" Value="{DynamicResource ControlTextBrushKey}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="HeadersVisibility" Value="All"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGrid}">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  Padding="{TemplateBinding Padding}"
                  SnapsToDevicePixels="True">
            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid UseLayoutRounding="True">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false"
                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type e:TreeDataGrid}}}"
                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static e:TreeDataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGrid}}}"
                            Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGrid}}}"/>
                    <Border Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static e:TreeDataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGrid}}}"
                            BorderThickness="0,0,0,0"
                            UseLayoutRounding="True"
                            SnapsToDevicePixels="True">
                      <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"/>
                    </Border>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                    <Border BorderBrush="{DynamicResource ControlDarkBrushKey}"
                            BorderThickness="1" Grid.Column="2"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Row="1"
                            Margin="-1,0,0,0">
                      <ScrollBar x:Name="PART_VerticalScrollBar"
                                 Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical"
                                 Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                 Margin="-1,0,0,0"
                                 ViewportSize="{TemplateBinding ViewportHeight}"/>
                    </Border>
                    <Grid Grid.Column="1" Grid.Row="2">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGrid}}}"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1"
                                 Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                 Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                 ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,-1,0"/>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGridRow}" TargetType="{x:Type e:TreeDataGridRow}">
    <Setter Property="BorderBrush" Value="{DynamicResource Red}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="Margin" Value="0,0,0,0"/>
    <Setter Property="HasItemsInternal" Value="{Binding RelativeSource={RelativeSource Self},Path=ItemsSource,Converter={StaticResource HasItems},Mode=OneWay}"/>
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    <Setter Property="ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGridRow}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  SnapsToDevicePixels="True" Grid.Row="0">
              <SelectiveScrollingGrid>
                <SelectiveScrollingGrid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </SelectiveScrollingGrid.ColumnDefinitions>
                <SelectiveScrollingGrid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </SelectiveScrollingGrid.RowDefinitions>
                <e:TreeDataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static e:TreeDataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                <e:TreeDataGridRowHeader Grid.Column="0" Grid.RowSpan="2" Grid.Row="0"
                                       SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                       Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static e:TreeDataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGrid}}}"/>
              </SelectiveScrollingGrid>
            </Border>
            <Border Height="20" BorderBrush="Red" BorderThickness="1" Visibility="Collapsed" Grid.Row="1" Name="XXX">
              <ItemsControl ItemsSource="{TemplateBinding ItemsSource}"
                            ItemContainerStyle="{StaticResource {x:Type e:TreeDataGridRow}}">
              </ItemsControl>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter TargetName="XXX" Property="Visibility" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGridRowHeader}" TargetType="{x:Type e:TreeDataGridRowHeader}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="BorderThickness" Value="0,0,1,1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGridRowHeader}">
          <Grid>
            <Grid.Resources>
              <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
              <Style TargetType="{x:Type Thumb}">
                <Setter Property="Height" Value="8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="SizeNS"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                      <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}">
              <Grid HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Control Grid.Column="1" SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGridRow}}}"/>
              </Grid>
            </Border>
            <Thumb x:Name="PART_TopHeaderGripper"    VerticalAlignment="Top"/>
            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGridCell}" TargetType="{x:Type e:TreeDataGridCell}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGridCell}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Border Background="Transparent" Name="Expander" Visibility="Collapsed" Width="50" Height="16">
              <ToggleButton Name="ExpandOrCollapseToggleButton"
                            Visibility="Hidden"
                            Width="20"
                            VerticalAlignment="Top"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGridRow}}}"
                            Style="{StaticResource ExpandOrCollapseToggleButtonStyle}"/>
            </Border>
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True"
                    Grid.Column="1">
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="CellIndex" Value="0">
              <Setter TargetName="Expander" Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGridRow}},Path=HasItems}" Value="True">
              <Setter TargetName="ExpandOrCollapseToggleButton" Property="Visibility" Value="Visible"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background"  Value="{DynamicResource HighlightBrushKey}"/>
        <Setter Property="Foreground"  Value="{DynamicResource HighlightTextBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource HighlightBrushKey}"/>
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static e:TreeDataGrid.FocusBorderBrushKey}}"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="true"/>
          <Condition Property="Selector.IsSelectionActive" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="Background"  Value="{DynamicResource InactiveSelectionHighlightBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InactiveSelectionHighlightBrushKey}"/>
        <Setter Property="Foreground"  Value="{DynamicResource InactiveSelectionHighlightTextBrushKey}"/>
      </MultiTrigger>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource GrayTextBrushKey}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGridCellsPresenter}" TargetType="{x:Type e:TreeDataGridCellsPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGridCellsPresenter}">
          <ItemsPresenter/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>