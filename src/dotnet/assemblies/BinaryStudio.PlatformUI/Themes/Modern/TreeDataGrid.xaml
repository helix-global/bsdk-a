<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:e="clr-namespace:BinaryStudio.PlatformUI.Controls"
                    xmlns:c="clr-namespace:BinaryStudio.PlatformUI.Converters"
                    xmlns:u="clr-namespace:BinaryStudio.PlatformUI"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
  <c:EnumerableHasItems x:Key="HasItems"/>
  <c:IsTypeOf x:Key="IsTypeOf"/>
  <Style x:Key="ExpandOrCollapseToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="ClickMode" Value="Press"/>
    <Setter Property="Background" Value="{DynamicResource ControlBrushKey}"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Margin="5,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Rectangle Fill="Transparent"/>
            <Path Name="Collapsed"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  StrokeThickness="1"
                  Stroke="{DynamicResource ControlTextBrushKey}"
                  Fill="{TemplateBinding Background}"
                  Data="M 0.5 0.5 L 8.5 0.5 L 8.5 8.5 L 0.5 8.5 L 0.5 0.5 M 2.5 4.5 L 6.5 4.5 M 4.5 2.5 L 4.5 6.5">
            </Path>
            <Path Name="Expanded"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="1,1,1,1"
                  StrokeThickness="1"
                  Stroke="{DynamicResource ControlTextBrushKey}"
                  Data="M 0.5 0.5 L 8.5 0.5 L 8.5 8.5 L 0.5 8.5 L 0.5 0.5 M 2.5 4.5 L 6.5 4.5"
                  Fill="{TemplateBinding Background}"
                  Visibility="Hidden">
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Visibility" Value="Visible"   TargetName="Expanded"/>
              <Setter Property="Visibility" Value="Collapsed" TargetName="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
              <Setter Property="Visibility" Value="Collapsed" TargetName="Expanded"/>
              <Setter Property="Visibility" Value="Visible"   TargetName="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGrid}" TargetType="{x:Type e:TreeDataGrid}">
    <Setter Property="Background" Value="{DynamicResource ControlBrushKey}"/>
    <Setter Property="Foreground" Value="{DynamicResource ControlTextBrushKey}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGrid}">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  Padding="{TemplateBinding Padding}"
                  SnapsToDevicePixels="True">
            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid UseLayoutRounding="True">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <e:TreeDataGridColumnHeadersPresenter Grid.Row="0" Grid.Column="1" x:Name="PART_ColumnHeadersPresenter"
                                                          ItemsSource="{Binding Columns,RelativeSource={RelativeSource AncestorType=e:TreeDataGrid},Mode=OneWay}"/>
                    <ScrollContentPresenter Grid.Column="0" x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                    <Border BorderBrush="{DynamicResource ControlDarkBrushKey}"
                            BorderThickness="1" Grid.Column="2"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Row="1"
                            Margin="-1,0,0,0">
                      <ScrollBar x:Name="PART_VerticalScrollBar"
                                 Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical"
                                 Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                 Margin="-1,0,0,0"
                                 ViewportSize="{TemplateBinding ViewportHeight}"/>
                    </Border>
                    <Grid Grid.Column="1" Grid.Row="2">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1"
                                 Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                 Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                 ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,-1,0"
                              VirtualizingStackPanel.IsVirtualizing="True"/>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGridRow}" TargetType="{x:Type e:TreeDataGridRow}">
    <Setter Property="BorderBrush" Value="{DynamicResource Red}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="Margin" Value="0,0,0,0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGridRow}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <e:TreeDataGridCellsPresenter Grid.Column="0"/>
            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="False">
              <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGridRowHeader}" TargetType="{x:Type e:TreeDataGridRowHeader}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="BorderThickness" Value="0,0,1,1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGridRowHeader}">
          <Grid>
            <Grid.Resources>
              <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
              <Style TargetType="{x:Type Thumb}">
                <Setter Property="Height" Value="8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="SizeNS"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                      <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}">
              <Grid HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Control Grid.Column="1" SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGridRow}}}"/>
              </Grid>
            </Border>
            <Thumb x:Name="PART_TopHeaderGripper"    VerticalAlignment="Top"/>
            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGridCell}" TargetType="{x:Type e:TreeDataGridCell}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="White"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Margin" Value="-1,-1,0,0"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGridCell}">
          <Border Width="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Column.ActualWidth,Mode=OneWay}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  SnapsToDevicePixels="True">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Border Background="Transparent" Name="Expander" Visibility="Collapsed" Height="16" Width="50">
                <ToggleButton Name="ExpandOrCollapseToggleButton"
                            Visibility="Hidden"
                            Width="20"
                            VerticalAlignment="Top"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGridRow}}}"
                            Style="{StaticResource ExpandOrCollapseToggleButtonStyle}"/>
              </Border>
                <e:TreeDataGridCellContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  x:Name="ContentPresenter"
                                                  Content="{TemplateBinding CellValue}"
                                                    Grid.Column="1"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="CellIndex" Value="0">
              <Setter TargetName="Expander" Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type e:TreeDataGridRow}},Path=HasItems}" Value="True">
              <Setter TargetName="ExpandOrCollapseToggleButton" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Column,RelativeSource={RelativeSource Self},Converter={StaticResource IsTypeOf},ConverterParameter={x:Type e:TreeDataGridTextColumn},Mode=OneWay}" Value="True">
              <Setter Property="DisplayTemplate" TargetName="ContentPresenter">
                <Setter.Value>
                  <DataTemplate>
                    <Grid>
                      <TextBlock Text="{Binding .,Mode=OneWay}"/>
                    </Grid>
                  </DataTemplate>
                </Setter.Value>
              </Setter>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background"  Value="{DynamicResource HighlightBrushKey}"/>
        <Setter Property="Foreground"  Value="{DynamicResource HighlightTextBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource HighlightBrushKey}"/>
      </Trigger>
      <!--<Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static e:TreeDataGrid.FocusBorderBrushKey}}"/>
      </Trigger>-->
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="true"/>
          <Condition Property="Selector.IsSelectionActive" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="Background"  Value="{DynamicResource InactiveSelectionHighlightBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InactiveSelectionHighlightBrushKey}"/>
        <Setter Property="Foreground"  Value="{DynamicResource InactiveSelectionHighlightTextBrushKey}"/>
      </MultiTrigger>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource GrayTextBrushKey}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGridCellsPresenter}" TargetType="{x:Type e:TreeDataGridCellsPresenter}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGridCellsPresenter}">
          <ItemsPresenter/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGridCellContentPresenter}" TargetType="{x:Type e:TreeDataGridCellContentPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGridCellContentPresenter}">
          <ContentControl Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding DisplayTemplate}"
                          Focusable="False"
                          Name="ContentPresenter"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGridColumnHeadersPresenter}" TargetType="{x:Type e:TreeDataGridColumnHeadersPresenter}">
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGridColumnHeadersPresenter}">
          <Grid IsItemsHost="True" Name="ItemsHost"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type e:TreeDataGridColumnHeader}" TargetType="{x:Type e:TreeDataGridColumnHeader}">
    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderBackgroundBrushKey}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="BorderThickness" Value="1,1,1,1"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:TreeDataGridColumnHeader}">
          <Grid d:DataContext="{d:DesignData TreeDataGridColumn}"
                UseLayoutRounding="True" SnapsToDevicePixels="True" Margin="0,0,0,0">
            <Grid.Resources>
              <Style TargetType="{x:Type Thumb}">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="SizeWE"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                      <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,1" Background="{TemplateBinding Background}" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
            <ContentControl Style="{Binding HeaderStyle}"
                            Content="{Binding Header}"
                            ContentTemplate="{Binding HeaderTemplate}"/>
            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"/>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsLastColumn,Mode=OneWay}" Value="True"/>
                <Condition Binding="{Binding Width.IsStar,Mode=OneWay}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_RightHeaderGripper" Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>