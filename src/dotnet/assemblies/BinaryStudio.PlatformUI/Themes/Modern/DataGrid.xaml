<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:e="clr-namespace:BinaryStudio.PlatformUI.Controls"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:c="clr-namespace:BinaryStudio.PlatformUI.Converters"
                    xmlns:u="clr-namespace:BinaryStudio.PlatformUI">
  <c:DateTimeConverter x:Key="DateTimeConverter"/>
  <c:IsNull x:Key="IsNull"/>
  <c:GridLengthConverter x:Key="GridLengthConverter"/>
  <u:SubtractionConverter x:Key="EllipsisButtonWidth" Subtrahend="2"/>
  <Style x:Key="{x:Type e:DataGrid}" TargetType="{x:Type e:DataGrid}">
    <Setter Property="Background" Value="{DynamicResource ControlBrushKey}"/>
    <Setter Property="Foreground" Value="{DynamicResource ControlTextBrushKey}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:DataGrid}">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid UseLayoutRounding="True">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                    <Border Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            BorderThickness="0,0,0,0"
                            UseLayoutRounding="True"
                            SnapsToDevicePixels="True">
                      <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"/>
                    </Border>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                    <Border BorderBrush="{DynamicResource ControlDarkBrushKey}" BorderThickness="1" Grid.Column="2" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Row="1"
                            Margin="-1,0,0,0">
                      <ScrollBar x:Name="PART_VerticalScrollBar"
                                 Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical"
                                 Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                 Margin="-1,0,0,0"
                                 ViewportSize="{TemplateBinding ViewportHeight}"/>
                    </Border>
                    <Grid Grid.Column="1" Grid.Row="2">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,-1,0"/>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="CellTemplateSelector">
      <Setter.Value>
        <e:DataGridCellTemplateSelector>
          <e:DataGridCellTemplate DataType="{x:Type s:DateTime}">
            <e:DataGridCellTemplate.DisplayTemplate>
              <DataTemplate>
                <Grid>
                  <TextBlock Margin="2,0,2,0" Text="{Binding Mode=OneWay,Converter={StaticResource DateTimeConverter},ConverterParameter='yyyy-MM-ddTHH-mm-ss'}" x:Name="Content"/>
                  <TextBlock Margin="2,0,2,0" Text="NULL" x:Name="NullMarker" Visibility="Hidden" Foreground="{DynamicResource GrayTextBrushKey}"/>
                </Grid>
                <DataTemplate.Triggers>
                  <DataTrigger Binding="{Binding Converter={StaticResource IsNull}}" Value="True">
                    <Setter TargetName="Content"    Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="NullMarker" Property="Visibility" Value="Visible"/>
                  </DataTrigger>
                </DataTemplate.Triggers>
              </DataTemplate>
            </e:DataGridCellTemplate.DisplayTemplate>
            <e:DataGridCellTemplate.EditTemplate>
              <DataTemplate>
                <TextBox BorderThickness="0"
                         Text="{Binding Mode=TwoWay,Path=.,Converter={StaticResource DateTimeConverter},ConverterParameter='yyyy-MM-ddTHH-mm-ss'}"
                         Margin="0" Padding="0"/>
              </DataTemplate>
            </e:DataGridCellTemplate.EditTemplate>
          </e:DataGridCellTemplate>
          <e:DataGridCellTemplate DataType="{x:Type s:Byte[]}">
            <e:DataGridCellTemplate.DisplayTemplate>
              <DataTemplate DataType="{x:Type s:Byte[]}">
                <Grid>
                  <TextBlock Margin="2,0,2,0" Text="NULL" x:Name="NullMarker" Visibility="Hidden" Foreground="{DynamicResource GrayTextBrushKey}"/>
                  <u:BridgeReference Source="{DynamicResource {x:Static SystemParameters.ScrollWidthKey}}" x:Name="ButtonWidth"/>
                  <Grid x:Name="ContentHolder">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="ContentText" Grid.Column="0"
                               Grid.ColumnSpan="2"
                               HorizontalAlignment="Stretch"
                               Margin="2,0,2,0"
                               TextTrimming="CharacterEllipsis">
                      <Run>{Length=</Run><Run Text="{Binding Length,Mode=OneWay}"/><Run>}</Run>
                    </TextBlock>
                    <Button Grid.Column="1" x:Name="EditButton" Visibility="Hidden"
                            Command="{x:Static u:CommandSource.OpenBinaryData}"
                            CommandParameter="{Binding}"
                            Width ="{Binding ElementName=ButtonWidth,Converter={StaticResource EllipsisButtonWidth},Path=Target}"
                            Height="{Binding ElementName=ButtonWidth,Converter={StaticResource EllipsisButtonWidth},Path=Target}">
                      <Button.Style>
                        <Style TargetType="{x:Type Button}">
                          <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
                          <Setter Property="Margin" Value="0"/>
                          <Setter Property="Focusable" Value="False"/>
                          <Setter Property="Background" Value="{DynamicResource ControlDarkDarkBrushKey}"/>
                          <Setter Property="BorderThickness" Value="1"/>
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate TargetType="{x:Type Button}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="True">
                                  <Grid>
                                    <Rectangle x:Name="Marker" Fill="Transparent"/>
                                    <ContentPresenter/>
                                  </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                  <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                      <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Marker" Property="Fill" Value="#55FFFFFF"/>
                                  </MultiTrigger>
                                </ControlTemplate.Triggers>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </Button.Style>
                      <TextBlock HorizontalAlignment="Center" Foreground="{DynamicResource ControlTextBrushKey}">...</TextBlock>
                    </Button>
                  </Grid>
                </Grid>
                <DataTemplate.Triggers>
                  <DataTrigger Binding="{Binding Converter={StaticResource IsNull}}" Value="True">
                    <Setter TargetName="ContentHolder" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="NullMarker"    Property="Visibility" Value="Visible"/>
                  </DataTrigger>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding Converter={StaticResource IsNull}}" Value="False"/>
                      <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=IsSelected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                      <Setter TargetName="ContentHolder" Property="Visibility" Value="Visible"/>
                      <Setter TargetName="NullMarker"    Property="Visibility" Value="Hidden"/>
                      <Setter TargetName="EditButton"    Property="Visibility" Value="Visible"/>
                      <Setter TargetName="ContentText"   Property="Grid.ColumnSpan" Value="1"/>
                    </MultiDataTrigger.Setters>
                  </MultiDataTrigger>
                </DataTemplate.Triggers>
              </DataTemplate>
            </e:DataGridCellTemplate.DisplayTemplate>
            <e:DataGridCellTemplate.EditTemplate>
              <DataTemplate>
                <TextBox BorderThickness="0"
                         Text="{Binding Mode=TwoWay,Path=.}"
                         Margin="0" Padding="0"/>
              </DataTemplate>
            </e:DataGridCellTemplate.EditTemplate>
          </e:DataGridCellTemplate>
          <e:DataGridCellTemplate DataType="{x:Type s:Object}">
            <e:DataGridCellTemplate.DisplayTemplate>
              <DataTemplate>
                <Grid>
                  <TextBlock Margin="2,0,2,0" Text="{Binding Mode=OneWay}" x:Name="Content"/>
                  <TextBlock Margin="2,0,2,0" Text="NULL" x:Name="NullMarker" Visibility="Hidden" Foreground="{DynamicResource GrayTextBrushKey}"/>
                </Grid>
                <DataTemplate.Triggers>
                  <DataTrigger Binding="{Binding Converter={StaticResource IsNull}}" Value="True">
                    <Setter TargetName="Content"    Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="NullMarker" Property="Visibility" Value="Visible"/>
                  </DataTrigger>
                </DataTemplate.Triggers>
              </DataTemplate>
            </e:DataGridCellTemplate.DisplayTemplate>
            <e:DataGridCellTemplate.EditTemplate>
              <DataTemplate>
                <TextBox BorderThickness="0" Text="{Binding Mode=TwoWay,Path=.}" Margin="0" Padding="0"/>
              </DataTemplate>
            </e:DataGridCellTemplate.EditTemplate>
          </e:DataGridCellTemplate>
        </e:DataGridCellTemplateSelector>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
    <Setter Property="Background" Value="{DynamicResource ControlBrushKey}"/>
    <Setter Property="Foreground" Value="{DynamicResource ControlTextBrushKey}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid UseLayoutRounding="True">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                    <Border Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            BorderThickness="0,0,0,0"
                            UseLayoutRounding="True"
                            SnapsToDevicePixels="True">
                      <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"/>
                    </Border>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                    <Border BorderBrush="{DynamicResource ControlDarkBrushKey}" BorderThickness="1" Grid.Column="2" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Row="1"
                            Margin="-1,0,0,0">
                      <ScrollBar x:Name="PART_VerticalScrollBar"
                                 Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical"
                                 Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                 Margin="-1,0,0,0"
                                 ViewportSize="{TemplateBinding ViewportHeight}"/>
                    </Border>
                    <Grid Grid.Column="1" Grid.Row="2">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,-1,0"/>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGridColumnHeadersPresenter}" TargetType="{x:Type DataGridColumnHeadersPresenter}">
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
          <Grid>
            <DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False"/>
            <ItemsPresenter/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderBackgroundBrushKey}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="BorderThickness" Value="1,1,1,1"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="e:DataGridOptions.ColumnHeaderTemplateSelector" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=(e:DataGridOptions.ColumnHeaderTemplateSelector),Mode=OneWay}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid UseLayoutRounding="True" SnapsToDevicePixels="True" Margin="0,0,0,0">
            <Grid.Resources>
              <Style TargetType="{x:Type Thumb}">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="SizeWE"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                      <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,1" Background="{TemplateBinding Background}" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              TextBlock.Foreground="{DynamicResource ControlTextBrushKey}"
                              ContentTemplateSelector="{TemplateBinding e:DataGridOptions.ColumnHeaderTemplateSelector}"/>
            <Thumb x:Name="PART_LeftHeaderGripper"  HorizontalAlignment="Left"/>
            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
    <Setter Property="BorderBrush" Value="{DynamicResource Red}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="Margin" Value="0,0,0,0"/>
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    <Setter Property="ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  SnapsToDevicePixels="True">
            <SelectiveScrollingGrid>
              <SelectiveScrollingGrid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </SelectiveScrollingGrid.ColumnDefinitions>
              <SelectiveScrollingGrid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
              </SelectiveScrollingGrid.RowDefinitions>
              <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
              <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            </SelectiveScrollingGrid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <!--<MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="true"/>
          <Condition Property="IsFocused" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="Background"  Value="{DynamicResource InactiveSelectionHighlightBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InactiveSelectionHighlightBrushKey}"/>
        <Setter Property="Foreground"  Value="{DynamicResource InactiveSelectionHighlightTextBrushKey}"/>
      </MultiTrigger>-->
      <!--<Trigger Property="IsNewItem" Value="True">
        <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
      </Trigger>-->
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type DataGridCellsPresenter}" TargetType="{x:Type DataGridCellsPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
          <ItemsPresenter/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="BorderThickness" Value="0,0,1,1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <Grid>
            <Grid.Resources>
              <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
              <Style TargetType="{x:Type Thumb}">
                <Setter Property="Height" Value="8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="SizeNS"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                      <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
              <Grid HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Control Grid.Column="1" SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
              </Grid>
            </Border>
            <Thumb x:Name="PART_TopHeaderGripper"    VerticalAlignment="Top"/>
            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background"  Value="{DynamicResource HighlightBrushKey}"/>
        <Setter Property="Foreground"  Value="{DynamicResource HighlightTextBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource HighlightBrushKey}"/>
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="true"/>
          <Condition Property="Selector.IsSelectionActive" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="Background"  Value="{DynamicResource InactiveSelectionHighlightBrushKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InactiveSelectionHighlightBrushKey}"/>
        <Setter Property="Foreground"  Value="{DynamicResource InactiveSelectionHighlightTextBrushKey}"/>
      </MultiTrigger>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource GrayTextBrushKey}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>