<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:e="clr-namespace:BinaryStudio.PlatformUI.Shell.Controls"
                    xmlns:u="clr-namespace:BinaryStudio.PlatformUI.Shell">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/BinaryStudio.PlatformUI;component/Themes/Shell/Controls/Images.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <e:BooleanOrConverter x:Key="BooleanOrConverter" />
  <Style x:Key="{x:Static e:DocumentGroupControl.TabItemStyleKey}" TargetType="{x:Type TabItem}">
    <Setter Property="e:GroupControlTabItem.CornerRadius" Value="0,0,0,0" />
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource ControlTextBrushKey}"/>
    <Setter Property="BorderBrush" Value="{x:Null}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <ControlTemplate.Resources>
            <Style TargetType="{x:Type e:GlyphButton}">
              <Setter Property="e:Glyph.Width" Value="8"/>
              <Setter Property="e:Glyph.Height" Value="8"/>
              <Setter Property="e:Glyph.Stretch" Value="Uniform"/>
              <Setter Property="Padding" Value="2"/>
            </Style>
          </ControlTemplate.Resources>
          <Border e:MouseCommands.MouseCommandAction="RightClick"
                  e:MouseCommands.MouseCommandParameter="{TemplateBinding ContentControl.Content}"
                  e:MouseCommands.MouseCommand="{x:Static e:ViewCommands.RightSelectCommand}"
                  ToolTip="{Binding ToolTip}">
            <Border e:MouseCommands.MouseCommandAction="LeftDoubleClick"
                    e:MouseCommands.MouseCommand="{x:Static e:ViewCommands.ToggleDocked}"
                    e:MouseCommands.MouseCommandParameter="{TemplateBinding ContentControl.Content}">
              <Border Name="Border"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      e:MouseCommands.MouseCommandAction="MiddleClick"
                      e:MouseCommands.MouseCommand="{x:Static e:ViewCommands.HideViewCommand}"
                      e:MouseCommands.MouseCommandParameter="{TemplateBinding ContentControl.Content}"
                      e:ViewPresenter.CanActivateFromMiddleClick="False"
                      CornerRadius="{Binding Path=(e:GroupControlTabItem.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid Margin="0,0,3,0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <ContentPresenter Content="{Binding Picture}" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True" UseLayoutRounding="True"/>
                  <ContentPresenter Grid.Column="1" Name="Content" HorizontalAlignment="Stretch" Margin="4,0,4,0" VerticalAlignment="Stretch" RecognizesAccessKey="True" ContentSource="Header"/>
                  <e:GlyphButton x:Name="HideButton" e:ViewPresenter.CanActivateFromLeftClick="False" Command="{x:Static e:ViewCommands.HideViewCommand}"
                                 CommandParameter="{TemplateBinding ContentControl.Content}"
                                 Margin="3,2,0,1"
                                 Foreground="{TemplateBinding e:Glyph.Foreground}"
                                 HoverBackground="{DynamicResource HighlightBrushKey}"
                                 Visibility="Hidden"
                                 Grid.Column="2">
                    <Path Fill="{Binding RelativeSource={RelativeSource Self},Path=(TextElement.Foreground)}" Width="8" Height="8" Stretch="Uniform" Data="{StaticResource HideGeometry}"/>
                  </e:GlyphButton>
                  <e:GlyphButton e:ViewPresenter.CanActivateFromLeftClick="False"
                                 HoverBackground="{DynamicResource HighlightBrushKey}"
                                 Foreground="{TemplateBinding e:Glyph.Foreground}"
                                 Command="{x:Static e:ViewCommands.PromoteCommand}"
                                 CommandParameter="{TemplateBinding ContentControl.Content}"
                                 x:Name="PromoteButton"
                                 Grid.Column="3"
                                 Margin="3,2,0,1" Visibility="{Binding Path=(u:DocumentGroup.IsPreviewView), Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Path Fill="{Binding RelativeSource={RelativeSource Self},Path=(TextElement.Foreground)}" Width="10" Height="10" Stretch="Uniform" Data="F1M9.022,6.667L9.022,2.665C9.022,2.389,8.798,2.165,8.522,2.165L2.647,2.165C2.371,2.165,2.147,2.389,2.147,2.665L2.147,6.667 1.022,6.667 1.022,7.646 10.022,7.646 10.022,6.667 9.022,6.667z M3.838,1.897L2.838,1.897 2.838,0 3.838,0 3.838,1.897z M2.289,1.604L1.582,2.312 0,0.729 0.707,0.022 2.289,1.604z M1.879,2.856L1.879,3.856 0.043,3.856 0.043,2.856 1.879,2.856z" Name="PromoteButtonPath"/>
                </e:GlyphButton>
                  <e:GlyphButton x:Name="PinButton" Visibility="Hidden"
                                 HoverBackground="{DynamicResource HighlightBrushKey}"
                                 e:ViewPresenter.CanActivateFromLeftClick="False"
                                 Foreground="{TemplateBinding e:Glyph.Foreground}"
                                 Command="{x:Static e:ViewCommands.TogglePinStatusCommand}"
                                 CommandParameter="{TemplateBinding ContentControl.Content}"
                                 Margin="3,2,3,1"
                                 Grid.Column="4">
                    <Path Fill="{Binding RelativeSource={RelativeSource Self},Path=(TextElement.Foreground)}" Width="8" Height="8" Stretch="Uniform" Data="F1M0 4L3 4 3 1 4 1 4 2 7 2 8 2 8 7 7 7 4 7 4 8 3 8 3 5 0 5 0 4z M7 3L4 3 4 5 7 5 7 3z"/>
                  </e:GlyphButton>
                </Grid>
              </Border>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource HighlightBrushKey}"/>
              <Setter Property="Foreground" Value="{DynamicResource HighlightTextBrushKey}"/>
            </MultiTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="True">
                  <Condition.Binding>
                    <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                      <Binding Path="IsSelected"/>
                      <Binding Path="(u:DocumentGroup.IsMultiSelected)" />
                    </MultiBinding>
                  </Condition.Binding>
                </Condition>
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.ZIndex" Value="1"/>
              <Setter Property="Background" Value="{DynamicResource ControlDarkBrushKey}"/>
              <Setter Property="Foreground" Value="{DynamicResource HighlightTextBrushKey}"/>
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Panel.Background" Value="#FFF4F4F4" />
              <Setter TargetName="Border" Property="BorderBrush" Value="#FFC9C7BA" />
              <Setter Property="Foreground" Value="{DynamicResource GrayTextBrushKey}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsActive}" Value="True">
              <Setter Property="Background" Value="{DynamicResource HotTrackBrushKey}"/>
              <Setter TargetName="HideButton" Property="Foreground" Value="{DynamicResource HighlightTextBrushKey}"/>
              <Setter TargetName="PinButton" Property="Foreground" Value="{DynamicResource HighlightTextBrushKey}"/>
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="HideButton" Property="Visibility" Value="Visible"/>
              <Setter TargetName="PinButton"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="HideButton" Property="Visibility" Value="Visible"/>
              <Setter TargetName="PinButton"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="HideButton" Property="Foreground" Value="{DynamicResource HighlightTextBrushKey}"/>
              <Setter TargetName="PinButton" Property="Foreground" Value="{DynamicResource HighlightTextBrushKey}"/>
            </MultiTrigger>
            <DataTrigger Value="Minimized" Binding="{Binding Path=(e:DocumentTabItem.EffectiveTabState), RelativeSource={RelativeSource Self}}">
              <Setter TargetName="Content" Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="PinButton" Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="HideButton" Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="PromoteButton" Property="ButtonBase.Command" Value="{x:Static e:ViewCommands.ActivateDocumentViewCommand}"/>
              <Setter TargetName="PromoteButtonPath" Property="Path.Data" Value="F1M5,7L4,8 0,4 4,0 5,1 2,4 5,7z M10,7L9,8 5,4 9,0 10,1 7,4 10,7z" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPinned}" Value="False">
              <Setter TargetName="PinButton" Property="e:Glyph.Geometry" Value="F1M0,4L3,4 3,1 4,1 4,2 7,2 8,2 8,7 7,7 4,7 4,8 3,8 3,5 0,5 0,4z M7,3L4,3 4,5 7,5 7,3z"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPinned}" Value="True">
              <Setter TargetName="PinButton" Property="Visibility" Value="Visible"/>
              <Setter TargetName="PinButton" Property="Margin" Value="3,2,3,1"/>
              <Setter TargetName="PinButton" Property="Foreground" Value="{DynamicResource HighlightTextBrushKey}"/>
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsPinned}" Value="False"/>
                <Condition Binding="{Binding Source={x:Static u:ViewManager.Instance}, Path=Preferences.ShowPinButtonInUnpinnedTabs}" Value="False" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PinButton" Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>
            <DataTrigger Value="True" Binding="{Binding Path=(u:DocumentGroup.IsPreviewView)}">
              <Setter TargetName="PinButton" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>