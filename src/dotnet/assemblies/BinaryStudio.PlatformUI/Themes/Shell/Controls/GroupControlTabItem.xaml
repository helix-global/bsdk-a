<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:e="clr-namespace:BinaryStudio.PlatformUI.Shell.Controls"
                    xmlns:u="clr-namespace:BinaryStudio.PlatformUI.Shell">
  <Style x:Key="TabItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="3,3,3,1" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ButtonNormalBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#F3F3F3" Offset="0" />
      <GradientStop Color="#EBEBEB" Offset="0.5" />
      <GradientStop Color="#DDDDDD" Offset="0.5" />
      <GradientStop Color="#CDCDCD" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94" />
  <LinearGradientBrush x:Key="TabItemHotBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#EAF6FD" Offset="0.15" />
      <GradientStop Color="#D9F0FC" Offset=".5" />
      <GradientStop Color="#BEE6FD" Offset=".5" />
      <GradientStop Color="#A7D9F5" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9" />
  <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4" />
  <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1" />
  <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA" />
  <Style x:Key="{x:Static e:TabGroupControl.TabItemStyleKey}" TargetType="{x:Type TabItem}">
    <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
    <Setter Property="Foreground" Value="{DynamicResource ControlTextBrushKey}"/>
    <Setter Property="Padding" Value="6,1,6,1"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlDarkBrushKey}"/>
    <Setter Property="Background" Value="{DynamicResource ControlBrushKey}"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="BorderThickness" Value="0,1,0,0"/>
    <!--<Setter Property="VerticalContentAlignment" Value="{x:Null}" />-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Border Name="Bd" SnapsToDevicePixels="True"
                  Padding="{TemplateBinding Padding}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}"
                  e:MouseCommands.MouseCommandAction="LeftDoubleClick"
                  e:MouseCommands.MouseCommand="{x:Static e:ViewCommands.ToggleDocked}"
                  e:MouseCommands.MouseCommandParameter="{TemplateBinding ContentControl.Content}"
                  e:ViewPresenter.CanActivateFromMiddleClick="False"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter Name="Content" ContentSource="Header"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              RecognizesAccessKey="True"
                              Margin="1,0,1,1"
                              HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                              VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True"/>
                <Condition Property="IsSelected" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource ControlDarkBrushKey}"/>
              <Setter Property="Foreground" Value="{DynamicResource HighlightBrushKey}"/>
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Panel.ZIndex" Value="1"/>
              <Setter Property="Background" Value="{DynamicResource WindowBrushKey}"/>
              <Setter Property="Foreground" Value="{DynamicResource HotTrackBrushKey}"/>
              <Setter Property="BorderThickness" Value="1,0,1,1"/>
              <Setter TargetName="Content" Property="Margin" Value="0,1,0,0"/>
            </Trigger>
            <!--<Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
              <Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Left">
              <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
              <Setter TargetName="Bd" Property="BorderThickness" Value="0,1,1,1" />
            </Trigger>-->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True"/>
                <Condition Property="TabItem.TabStripPlacement" Value="Top"/>
              </MultiTrigger.Conditions>
              <!--<Setter Property="Margin" Value="-2,-2,-2,-1" />
              <Setter TargetName="Content" Property="Margin" Value="0,0,0,1" />-->
            </MultiTrigger>
            <!--<MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Bottom" />
              </MultiTrigger.Conditions>
              <Setter Property="Margin" Value="-2,-1,-2,-2" />
              <Setter TargetName="Content" Property="Margin" Value="0,1,0,0" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Left" />
              </MultiTrigger.Conditions>
              <Setter Property="Margin" Value="-2,-2,-1,-2" />
              <Setter TargetName="Content" Property="Margin" Value="0,0,1,0" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Right" />
              </MultiTrigger.Conditions>
              <Setter Property="Margin" Value="-1,-2,-2,-2" />
              <Setter TargetName="Content" Property="Margin" Value="1,0,0,0" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}" Property="Background" />
              <Setter TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}" Property="BorderBrush" />
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
            </Trigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--<Style TargetType="{x:Type e:GroupControlTabItem}">
    <Style.Resources>
      <DataTemplate DataType="{x:Type u:View}">
        <e:DragUndockHeader ViewElement="{Binding}" ViewFrameworkElement="{Binding Content}">
          <ContentControl Content="{Binding Title}"
                          ContentTemplate="{Binding TabTitleTemplate}" />
        </e:DragUndockHeader>
      </DataTemplate>
    </Style.Resources>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="BorderBrush" Value="Gray"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Margin" Value="2"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:GroupControlTabItem}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->
</ResourceDictionary>