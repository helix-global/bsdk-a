<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:e="clr-namespace:BinaryStudio.PlatformUI.Shell.Controls"
                    xmlns:c="clr-namespace:BinaryStudio.PlatformUI">
  <c:CopyTo x:Key="CopyTo" Key="GlyphButton"/>
  <Style x:Key="{x:Type e:GlyphButton}" TargetType="{x:Type e:GlyphButton}">
    <Style.Resources>
      <ResourceDictionary>
        <e:BooleanOrConverter x:Key="BooleanOrConverter" />
      </ResourceDictionary>
    </Style.Resources>
    <Setter Property="Width"  Value="14"/>
    <Setter Property="Height" Value="14"/>
    <Setter Property="TextElement.Foreground" Value="{Binding Path=GlyphForeground, RelativeSource={RelativeSource Self}}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="#00FFFFFF" />
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Focusable" Value="False" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="HoverBackground"  Value="{DynamicResource GlyphButtonHoverBackgroundBrushKey}"/>
    <Setter Property="HoverBorderBrush" Value="{DynamicResource GlyphButtonHoverBorderBrushKey}"/>
    <Setter Property="GlyphForeground"  Value="{DynamicResource GlyphForegroundBrushKey}"/>
    <Setter Property="HoverBorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type e:GlyphButton}">
          <Border Name="Border" Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <ContentPresenter x:Name="ContentPresenter" Visibility="Visible"/>
              <Rectangle x:Name="GeometryPresenter" Visibility="Collapsed" Margin="{TemplateBinding Padding}">
                <Rectangle.Fill>
                  <DrawingBrush>
                    <DrawingBrush.Drawing>
                      <DrawingGroup>
                        <DrawingGroup.Children>
                          <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource TemplatedParent},Path=GlyphForeground,Mode=OneWay}"
                                           Geometry="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(e:Glyph.Geometry),Mode=OneWay}"/>
                        </DrawingGroup.Children>
                      </DrawingGroup>
                    </DrawingBrush.Drawing>
                  </DrawingBrush>
                </Rectangle.Fill>
              </Rectangle>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Content" Value="{x:Null}">
              <Setter TargetName="ContentPresenter"  Property="Visibility" Value="Collapsed"/>
              <Setter TargetName="GeometryPresenter" Property="Visibility" Value="Visible"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="True">
                  <Condition.Binding>
                    <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                      <Binding Path="IsMouseOver" RelativeSource="{RelativeSource Self}" />
                      <Binding Path="IsKeyboardFocused" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                  </Condition.Binding>
                </Condition>
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.Setters>
                <Setter TargetName="Border" Value="{Binding HoverBackground, RelativeSource={RelativeSource TemplatedParent}}" Property="Background" />
                <Setter TargetName="Border" Value="{Binding HoverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" Property="BorderBrush" />
                <Setter TargetName="Border" Value="{Binding HoverBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Property="BorderThickness" />
                <Setter Value="{Binding HoverForeground, RelativeSource={RelativeSource Self}}" Property="TextElement.Foreground" />
              </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="True">
                  <Condition.Binding>
                    <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                      <Binding Path="IsPressed" RelativeSource="{RelativeSource Self}" />
                      <Binding Path="IsChecked" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                  </Condition.Binding>
                </Condition>
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.Setters>
                <Setter TargetName="Border" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}" Property="Border.Background" />
                <Setter TargetName="Border" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" Property="Border.BorderBrush" />
                <Setter TargetName="Border" Value="{Binding PressedBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Property="Border.BorderThickness" />
                <Setter Value="{Binding PressedForeground, RelativeSource={RelativeSource Self}}" Property="TextElement.Foreground" />
              </MultiDataTrigger.Setters>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>