using System;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace BinaryStudio.PortableExecutable.Win32
    {
        [StructLayout(LayoutKind.Sequential, Pack = 1)]
        public struct IMAGE_OPTIONAL_HEADER64
            {
            private readonly UInt16 Magic;                                  /* The unsigned integer that identifies the state of the image file.                                                                                                                                                                                                                                                                */
            private readonly Byte   MajorLinkerVersion;                     /* The linker major version number.                                                                                                                                                                                                                                                                                                 */
            private readonly Byte   MinorLinkerVersion;                     /* The linker minor version number.                                                                                                                                                                                                                                                                                                 */
            private readonly UInt32 SizeOfCode;                             /* The size of the code (text) section, or the sum of all code sections if there are multiple sections.                                                                                                                                                                                                                             */
            private readonly UInt32 SizeOfInitializedData;                  /* The size of the initialized data section, or the sum of all such sections if there are multiple data sections.                                                                                                                                                                                                                   */
            private readonly UInt32 SizeOfUninitializedData;                /* The size of the uninitialized data section (BSS), or the sum of all such sections if there are multiple BSS sections.                                                                                                                                                                                                            */
            private readonly UInt32 AddressOfEntryPoint;                    /* The address of the entry point relative to the image base when the executable file is loaded into memory. For program images, this is the starting address. For device drivers, this is the address of the initialization function. An entry point is optional for DLLs. When no entry point is present, this field must be zero.*/
            private readonly UInt32 BaseOfCode;                             /* The address that is relative to the image base of the beginning-of-code section when it is loaded into memory.                                                                                                                                                                                                                   */
            private readonly UInt64 ImageBase;                              /* The preferred address of the first byte of image when loaded into memory; must be a multiple of 64 K. The default for DLLs is 0x10000000. The default for Windows CE EXEs is 0x00010000. The default for Windows NT, Windows 2000, Windows XP, Windows 95, Windows 98, and Windows Me is 0x00400000.                             */
            private readonly UInt32 SectionAlignment;                       /* The alignment (in bytes) of sections when they are loaded into memory. It must be greater than or equal to FileAlignment. The default is the page size for the architecture.                                                                                                                                                     */
            private readonly UInt32 FileAlignment;                          /* The alignment factor (in bytes) that is used to align the raw data of sections in the image file. The value should be a power of 2 between 512 and 64 K, inclusive. The default is 512. If the [SectionAlignment] is less than the architecture’s page size, then FileAlignment must match [SectionAlignment].                   */
            private readonly UInt16 MajorOperatingSystemVersion;            /* The major version number of the required operating system.                                                                                                                                                                                                                                                                       */
            private readonly UInt16 MinorOperatingSystemVersion;            /* The minor version number of the required operating system.                                                                                                                                                                                                                                                                       */
            private readonly UInt16 MajorImageVersion;                      /* The major version number of the image.                                                                                                                                                                                                                                                                                           */
            private readonly UInt16 MinorImageVersion;                      /* The minor version number of the image.                                                                                                                                                                                                                                                                                           */
            private readonly UInt16 MajorSubsystemVersion;                  /* The major version number of the subsystem.                                                                                                                                                                                                                                                                                       */
            private readonly UInt16 MinorSubsystemVersion;                  /* The minor version number of the subsystem.                                                                                                                                                                                                                                                                                       */
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private readonly UInt32 Win32VersionValue;                      /* Reserved, must be zero.                                                                                                                                                                                                                                                                                                          */
            private readonly UInt32 SizeOfImage;                            /* The size (in bytes) of the image, including all headers, as the image is loaded in memory. It must be a multiple of [SectionAlignment].                                                                                                                                                                                          */
            private readonly UInt32 SizeOfHeaders;                          /* The combined size of an MS DOS stub, PE header, and section headers rounded up to a multiple of [FileAlignment].                                                                                                                                                                                                                 */
            private readonly UInt32 CheckSum;                               /* The image file checksum. The algorithm for computing the checksum is incorporated into IMAGHELP.DLL. The following are checked for validation at load time: all drivers, any DLL loaded at boot time, and any DLL that is loaded into a critical Windows process.                                                                */
            private readonly IMAGE_SUBSYSTEM Subsystem;                     /* The subsystem that is required to run this image.                                                                                                                                                                                                                                                                                */
            private readonly IMAGE_DLLCHARACTERISTICS DllCharacteristics;   /* DLL characteristics.                                                                                                                                                                                                                                                                                                             */
            private readonly UInt64 SizeOfStackReserve;                     /* The size of the stack to reserve. Only [SizeOfStackCommit] is committed; the rest is made available one page at a time until the reserve size is reached.                                                                                                                                                                        */
            private readonly UInt64 SizeOfStackCommit;                      /* The size of the stack to commit.                                                                                                                                                                                                                                                                                                 */
            private readonly UInt64 SizeOfHeapReserve;                      /* The size of the local heap space to reserve. Only [SizeOfHeapCommit] is committed; the rest is made available one page at a time until the reserve size is reached.                                                                                                                                                              */
            private readonly UInt64 SizeOfHeapCommit;                       /* The size of the local heap space to commit.                                                                                                                                                                                                                                                                                      */
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private readonly UInt32 LoaderFlags;                            /* Reserved, must be zero.                                                                                                                                                                                                                                                                                                          */
            public  readonly UInt32 NumberOfRvaAndSizes;                    /* The number of data-directory entries in the remainder of the optional header. Each describes a location and size.                                                                                                                                                                                                                */
            }
    }